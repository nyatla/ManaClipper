package jp.nyatla.manacliper.io;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import jp.nyatla.manacliper.type.ClipDataset;
import jp.nyatla.manacliper.type.ClipDataset.BoxInfo;

@XmlRootElement(name="dataset")
public class DlibXml {
	public String name="imglab dataset";
	public String comment="Generated by ManaClipper/0.1";
	@XmlElementWrapper(name = "images")
	@XmlElement(name="image")
	public List<Image> images=new ArrayList<Image>();
		
	@XmlType(name="image")
	static public class Image{
		public Image() {}
		public Image(ClipDataset.Item i_item) {
			this(i_item.path,i_item.getBoxInfo());
		}
		public Image(String i_fname,List<ClipDataset.BoxInfo> i_boxes) 
		{
			this.file=i_fname;
			for(ClipDataset.BoxInfo i:i_boxes) {
				this.boxes.add(new Box(i));
			}
		}
		@XmlAttribute
		public String file="";
		@XmlElement(name="box")
		public List<Box> boxes=new ArrayList<Box>();
	}
	@XmlType(name="box")
	static public class Box{
		public Box() {}
		public Box(BoxInfo i) {
			this.top=i.t;
			this.left=i.l;
			this.width=i.w;
			this.height=i.h;
			this.tag=i.tag;
		}
		public Box(int l, int t, int w, int h,String tag) {
			this.top=t;
			this.left=l;
			this.width=w;
			this.height=h;
			this.tag=tag;
		}
		@XmlAttribute
		public int top=0;
		@XmlAttribute
		public int left=0;
		@XmlAttribute
		public int width=0;
		@XmlAttribute
		public int height=0;
		@XmlAttribute
		public String tag="";
		
	}
	public static void saveToFile(DlibXml i_object,File i_file){
		JAXBContext context;
		try {
			context = JAXBContext.newInstance(DlibXml.class);
			Marshaller marshaller = context.createMarshaller();
			marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,true);

			marshaller.marshal(i_object,i_file);
		} catch (JAXBException e) {
			throw new RuntimeException(e);
		}
	}	
}
